# ansible-playbook deploy.yaml -i inventories/dev/hosts --vault-id ~/.tokens/master_id

- hosts: all
  strategy: free
  tasks:

    - name: Create all the save directories
      file:
        path: '{{ directories_files }}/{{ server.name }}/saves'
        state: directory
        mode: '0755'
        owner: automation
        group: automation
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ directories_files }}/{{ item.name }}/saves'
      become: yes

    - name: Create all the server directories
      file:
        path: '{{ directories_files }}/{{ server.name }}/server'
        state: directory
        mode: '0755'
        owner: automation
        group: automation
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ directories_files }}/{{ item.name }}/server'
      become: yes

    - name: Render docker-compose.yaml
      template:
        src: docker-compose.yaml.j2
        dest: '{{ directories_files }}/docker-compose.yaml'

    - name: Run `docker stack deploy`
      shell: >
        docker stack deploy 
        -c {{ directories_files }}/docker-compose.yaml 
        {{ env }}_valheim

    - name: Allow server ports
      ufw:
        rule: allow
        port: "{{ server.port }}"
        proto: udp
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.port }}'
      become: yes

    - name: Allow server ports +1
      ufw:
        rule: allow
        port: "{{ server.port + 1 }}"
        proto: udp
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.port + 1 }}'
      become: yes

    - name: Allow server ports +2
      ufw:
        rule: allow
        port: "{{ server.port + 2 }}"
        proto: udp
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.port + 2 }}'
      become: yes

    - name: Reload Firewall and enable at boot
      ufw:
        state: enabled
        policy: deny
      become: yes


