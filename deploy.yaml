# ansible-playbook deploy.yaml -i inventories/dev/hosts --vault-id ~/.tokens/master_id

- hosts: all
  strategy: free
  roles:
    - ubuntu_base

  tasks:

    - name: Install SteamCMD
      shell: >
        add-apt-repository multiverse &&
        dpkg --add-architecture i386 &&
        apt update &&
        apt install lib32gcc1 steamcmd
      become: yes

    - name: Create installation directory {{ install_dir }}
      file:
        path: '{{ install_dir }}'
        state: directory
        mode: '0755'

    - name: Render start_server.sh.j2 to {{ install_dir }}/start_server_XXXX.sh
      template:
        src: start_server.sh.j2
        dest: '{{ install_dir }}/start_server_{{ item.name }}.sh'
        mode: u=rwx,g=rwx,o=rx
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: 'start_server_{{ item.name }}.sh'

    - name: Render valheim.service.j2 to /etc/systemd/system/valheim_XXXX.service
      template:
        src: valheim.service.j2
        dest: /etc/systemd/system/valheim_{{ item.name }}.service
        mode: u=rwx,g=rwx,o=rx
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.name }}'
      become: yes

    - name: Reload systemd
      shell: systemctl daemon-reload
      become: yes

    - name: Start each service
      shell: systemctl start valheim_{{ item.name }}
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.name }}'
      become: yes

    - name: Allow server ports
      ufw:
        rule: allow
        port: "{{ item.port }}"
        proto: any
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.port }}'
      become: yes

    - name: Allow server ports +1
      ufw:
        rule: allow
        port: "{{ item.port + 1 }}"
        proto: any
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.port + 1 }}'
      become: yes

    - name: Reload Firewall and enable at boot
      ufw:
        state: enabled
        policy: deny
      become: yes

    - name: Enable each service to start at boot
      shell: systemctl enable valheim_{{ item.name }}
      vars:
        server: '{{ item }}'
      with_items: '{{ servers }}'
      loop_control:
        label: '{{ item.name }}'
      become: yes
